// Что же такое граф?
// Граф - это некая абстрактная структура данных, представляющая собой множество вершин и набор ребер,
// тоесть соединений между парами вершин
// Самый простой и наглядный пример, это карта, в которой есть города и города соединены маршрутами
// Маршруты в данном случае - это рёбра, а города - вершины
// Рёбра бывают однонаправленными и двунаправленными, тоесть из А мы можем попасть в В и из В в А.
// Основная задача - существует ли путь из точки А в точку В, и функция при этом должна находить кратчайший путь, если таков имеется.


// Поиск в ширину в графе

const graph = {};
graph.a = ['b', 'c'];
graph.b = ['f'];
graph.c = ['d', 'e'];
graph.d = ['f'];
graph.e = ['f'];
graph.f = ['g'];

// в этом алгоритме данных будет использоваться такая структура данных как очередь.
// Очередь - это структура данных, состоящая из каких-то элементов
// Основной принцип - элементы всегда добавляются в конец структуры, а извлекаются из её начала
// Примером  является очередь в магазине
// Такой принцип называется FIFO - First IN FIRST OUT (Первый вошёл - первый вышел.)

function breadthSearch(graph, start, end) {
    let queue = [];
    queue.push(start);
    while (queue.length > 0) {
        const curent = queue.shift();
        if (!graph[curent]) {
            graph[curent] = [];
        }
        if (graph[curent].includes(end)) {
            return true;
        } else {
            queue = [...queue, ...graph[curent]];
        }
    }
    return false;
}

console.log(breadthSearch(graph, 'a', 'g'));